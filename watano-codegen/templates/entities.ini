[common]
target=nutz
entities=User
import=java.util.*,javax.persistence.Transient,org.nutz.dao.entity.annotation.*

[User]
__User__.import=java.text.*,org.apache.shiro.authc.*,org.apache.shiro.subject.*,org.nutz.json.*,org.nutz.lang.Lang,com.watano.SystemConstants,com.watano.util.CryptoUtil
__User__.implements=Account
#__User__.table=t_user
#@PK( {"masterId", "petId"} )
#__User__.PK=masterId,petId
id=Long
#@Id(auto=false) id.id=auto=false auto_increment
id.id=
name=String
#@Name(casesensitive=false) name.name=casesensitive=false
name.name=
fullName=String
password=String
passwordResetKey=String
passwordResetKey.comment=UUID generated when they ask to reset the password
mail=String
mobile=String
phone=String
preferences=String
lastLoginTimestamp=Date
lastLoginTimestamp.comment=can be null if never logged in
lockTimestamp=Date
lockTimestamp.comment=date the account was locked, null means unlocked (default behavior)
passwordResetKeyTimestamp=Date
passwordResetKeyTimestamp.comment=when they asked to reset the password
sessionTimeoutEnabled=boolean
sessionTimeoutEnabled.value=true
sessionTimeoutEnabled.comment=per-user session configuration
userRoles=Set<Role>
#@ManyMany(target = Role.class, relation = "t_user_roles", from = "user_id", to = "role_id")
userRoles.ManyMany=Role,t_user_roles,user_id,role_id
status=Integer
